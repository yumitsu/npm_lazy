#!/usr/bin/env node
var fs = require('fs'),
    path = require('path'),
    nodeResolve = require('resolve'),
    start = require('../server.js'),
    daemon = require('daemon'),
    opts = require('yargs')
      .options({
        'config': { alias: 'c' },
        'help': { alias: 'h' },
        'init': { },
        'show-config': { },
        'daemon': { alias: 'd' },
        'version': { }
      }),
    argv = opts.parse(process.argv);

if(argv['version'] || argv['v'] ) {
  console.log(require('../package.json').version);
  process.exit();
}

if(argv['init']) {
  return fs.createReadStream(__dirname + '/../config.js')
    .pipe(process.stdout)
    .on('close', function () {
      process.exit();
    });
}

if(argv['help']) {
  return fs.createReadStream(__dirname + '/usage.txt')
    .pipe(process.stdout)
    .on('close', function () {
      process.exit();
    });
}

var config = require('../config.js'),
    configPath = path.normalize(__dirname + '/../config.js');

if (argv['config']){
  configPath = nodeResolve.sync(argv.config, { basedir: process.cwd() });
  config = require(configPath);
}

if (argv['daemon'] || argv['d'] || config.daemonize) {
  var daemon_opts = {},
      logFile = (config.loggingOpts != null && 
                 config.loggingOpts.filename != null ? config.loggingOpts.filename : '') || path.resolve(process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'] + './npm_lazy.log'),
      fd,
      child;

  if (config.loggingOpts != null && config.loggingOpts.logToConsole != null && !!config.loggingOpts.logToConsole) {
    fd = fs.openSync(logFile, 'a');
    daemon_opts.stdout = daemon_opts.stderr = fd;
  }

  child = daemon.daemon(__filename, [], daemon_opts);
  // child.on('exit', function(c) {
  //   fs.closeSync(fd);
  // });
  console.log('Daemonized, pid '+child.pid);
  process.exit();
}

if (argv['show-config']) {
  console.log(configPath, config);
}

start(config);
